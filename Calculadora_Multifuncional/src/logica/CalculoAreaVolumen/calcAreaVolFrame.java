package logica.CalculoAreaVolumen;

import java.util.ArrayList;
import presentacion.Calculadora;
import java.util.List;
import javax.swing.JOptionPane;
import persistencia.LecturaEscritura;

public class calcAreaVolFrame extends javax.swing.JFrame {

    private final List<String> milista = new ArrayList<>();

    public calcAreaVolFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        buttonGroup1.add(circulo);
        circulo.setVisible(false);
        buttonGroup1.add(rectangulo);
        rectangulo.setVisible(false);
        buttonGroup1.add(trapecio);
        trapecio.setVisible(false);
        buttonGroup1.add(cuadrado);
        cuadrado.setVisible(false);
        buttonGroup1.add(teq);
        teq.setVisible(false);
        buttonGroup1.add(tes);
        tes.setVisible(false);
        buttonGroup1.add(ti);
        ti.setVisible(false);
        milista.add("OPCIÓN------------> Cálculo de Área y Perímetro");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        circulo = new javax.swing.JRadioButton();
        rectangulo = new javax.swing.JRadioButton();
        trapecio = new javax.swing.JRadioButton();
        cuadrado = new javax.swing.JRadioButton();
        teq = new javax.swing.JRadioButton();
        tes = new javax.swing.JRadioButton();
        ti = new javax.swing.JRadioButton();
        combo1 = new javax.swing.JComboBox<>();
        historial = new javax.swing.JButton();
        areaTexto2 = new javax.swing.JTextField();
        circulo1 = new javax.swing.JLabel();
        cuadrado1 = new javax.swing.JLabel();
        rectangulo1 = new javax.swing.JLabel();
        trapecio1 = new javax.swing.JLabel();
        teq1 = new javax.swing.JLabel();
        ti1 = new javax.swing.JLabel();
        tes1 = new javax.swing.JLabel();
        Volumen = new javax.swing.JButton();
        lado2 = new javax.swing.JLabel();
        lado1 = new javax.swing.JLabel();
        areaTexto1 = new javax.swing.JTextField();
        lado3 = new javax.swing.JLabel();
        areaTexto3 = new javax.swing.JTextField();
        resultado = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CALCULADORA DE PERÍMETRO, ÁREA Y VOLUMEN");

        jButton10.setText("Calcular");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Limpiar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        circulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circuloActionPerformed(evt);
            }
        });

        rectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rectanguloActionPerformed(evt);
            }
        });

        trapecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trapecioActionPerformed(evt);
            }
        });

        cuadrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuadradoActionPerformed(evt);
            }
        });

        teq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teqActionPerformed(evt);
            }
        });

        tes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tesActionPerformed(evt);
            }
        });

        ti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiActionPerformed(evt);
            }
        });

        combo1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(Seleccionar)", "Perímetro", "Área" }));
        combo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo1ActionPerformed(evt);
            }
        });

        historial.setText("Historial");
        historial.setToolTipText("Guarda el historial y abre el archivo.");
        historial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historialActionPerformed(evt);
            }
        });

        areaTexto2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        areaTexto2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        circulo1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        circulo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/circulo.png"))); // NOI18N
        circulo1.setText("Círculo");

        cuadrado1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cuadrado1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/cuiadrado.png"))); // NOI18N
        cuadrado1.setText("Cuadrado");

        rectangulo1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rectangulo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/rectangulo.png"))); // NOI18N
        rectangulo1.setText("Rectángulo");

        trapecio1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        trapecio1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/TRAPECIO.png"))); // NOI18N
        trapecio1.setText("Trapecio Regular");

        teq1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        teq1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/teq.png"))); // NOI18N
        teq1.setText("Triángulo Equilátero");

        ti1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ti1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/ti.png"))); // NOI18N
        ti1.setText("Triángulo Isosceles");

        tes1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tes1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/tes.png"))); // NOI18N
        tes1.setText("Triángulo Escaleno");

        Volumen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Volumen.setText("Calcular Volumen");
        Volumen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolumenActionPerformed(evt);
            }
        });

        lado2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lado2.setText("Ingrese el lado:");

        lado1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lado1.setText("Ingrese el lado:");

        areaTexto1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        areaTexto1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lado3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lado3.setText("Ingrese el lado:");

        areaTexto3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        areaTexto3.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        resultado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        resultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultadoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Resultado:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cuadrado)
                                    .addComponent(rectangulo)))
                            .addComponent(circulo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(trapecio, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(trapecio1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rectangulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cuadrado1)
                                            .addComponent(circulo1)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(ti)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(ti1)
                                                    .addComponent(teq1)))
                                            .addComponent(teq)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(tes)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tes1))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(Volumen))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(historial)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lado2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lado3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lado1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(areaTexto1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(areaTexto2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(areaTexto3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton11)
                        .addGap(17, 17, 17)))
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(252, 252, 252)
                                .addComponent(ti))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(231, 231, 231)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ti1)
                                    .addComponent(rectangulo1))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(circulo1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(tes))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tes1)
                                    .addComponent(resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Volumen, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cuadrado1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(teq1)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(teq)
                                            .addGap(29, 29, 29)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(cuadrado)
                                .addGap(25, 25, 25)))
                        .addGap(26, 26, 26)
                        .addComponent(rectangulo)
                        .addGap(53, 53, 53)
                        .addComponent(circulo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(areaTexto1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lado1))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(areaTexto2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lado2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(areaTexto3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lado3))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton10)
                                .addComponent(jButton11))
                            .addComponent(trapecio1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(trapecio)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(historial)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        areaTexto2.setVisible(false);
        circulo1.setVisible(false);
        cuadrado1.setVisible(false);
        rectangulo1.setVisible(false);
        trapecio1.setVisible(false);
        teq1.setVisible(false);
        ti1.setVisible(false);
        tes1.setVisible(false);
        lado2.setVisible(false);
        lado1.setVisible(false);
        areaTexto1.setVisible(false);
        lado3.setVisible(false);
        areaTexto3.setVisible(false);
        resultado.setFocusable(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try {
            if(combo1.getSelectedIndex()==0){
                JOptionPane.showMessageDialog(this,"No ha seleccionado una opción");
            }
            if (cuadrado.isSelected()) {
                double l;
                milista.add("Cuadrado");
                if ("Perímetro".equals((String) combo1.getSelectedItem())) {
                    l = Double.parseDouble(areaTexto1.getText());
                    Cuadrado c = new Cuadrado(l);
                    resultado.setText(String.valueOf(c.perimetro()));
                    milista.add("Lado = " + String.valueOf(l) + "\t" + "---> " + "Perímetro = " + resultado.getText() + " u");
                } else {
                    l = Double.parseDouble(areaTexto1.getText());
                    Cuadrado c = new Cuadrado(l);
                    resultado.setText(String.valueOf(c.area()));
                    milista.add("Lado = " + String.valueOf(l) + "\t" + "---> " + "Área = " + resultado.getText() + " u2");
                }
            }

            if (rectangulo.isSelected()) {
                double l1;
                double l2;
                milista.add("Rectángulo");
                if ("Perímetro".equals((String) combo1.getSelectedItem())) {

                    l1 = Double.parseDouble(areaTexto1.getText());
                    l2 = Double.parseDouble(areaTexto2.getText());
                    Rectangulo r = new Rectangulo(l1, l2);
                    resultado.setText(String.valueOf(r.perimetro()));
                    milista.add("Lado largo = " + String.valueOf(l1) + "\t" + "Lado corto = " + String.valueOf(l2) + "\t" + "---> " + "Perímetro = " + resultado.getText() + " u");
                } else {

                    l1 = Double.parseDouble(areaTexto1.getText());
                    l2 = Double.parseDouble(areaTexto2.getText());
                    Rectangulo r = new Rectangulo(l1, l2);
                    resultado.setText(String.valueOf(r.area()));
                    milista.add("Base = " + String.valueOf(l1) + "\t" + "Altura = " + String.valueOf(l2) + "\t" + "---> " + "Área = " + resultado.getText() + " u2");
                }
            }

            if (circulo.isSelected()) {
                double l;
                milista.add("Círculo");
                if ("Perímetro".equals((String) combo1.getSelectedItem())) {
                    l = Double.parseDouble(areaTexto1.getText());
                    Circulo c = new Circulo(l);
                    resultado.setText(String.valueOf(c.perimetro()));
                    milista.add("Radio = " + String.valueOf(l) + "\t" + "---> " + "Perímetro = " + resultado.getText() + " u");
                } else {
                    l = Double.parseDouble(areaTexto1.getText());
                    Circulo c = new Circulo(l);
                    resultado.setText(String.valueOf(c.area()));
                    milista.add("Radio = " + String.valueOf(l) + "\t" + "---> " + "Área = " + resultado.getText() + " u2");
                }
            }

            if (trapecio.isSelected()) {
                double l1;
                double l2;
                double l3;
                milista.add("Trapecio");
                if ("Perímetro".equals((String) combo1.getSelectedItem())) {
                    l1 = Double.parseDouble(areaTexto1.getText());
                    l2 = Double.parseDouble(areaTexto2.getText());
                    l3 = Double.parseDouble(areaTexto3.getText());
                    Trapecio t = new Trapecio(l1, l2, l3);
                    resultado.setText(String.valueOf(t.perimetro()));
                    milista.add("Base menor = " + String.valueOf(l1) + "\t" + "Base mayor = " + String.valueOf(l2) + "Lado = " + String.valueOf(l3) + "\t" + "---> " + "Perímetro = " + resultado.getText() + " u");
                } else {
                    l1 = Double.parseDouble(areaTexto1.getText());
                    l2 = Double.parseDouble(areaTexto2.getText());
                    l3 = Double.parseDouble(areaTexto3.getText());
                    Trapecio t = new Trapecio(l1, l2, l3);
                    resultado.setText(String.valueOf(t.area()));
                    milista.add("Base menor = " + String.valueOf(l1) + "\t" + "Base mayor = " + String.valueOf(l2) + "Altura = " + String.valueOf(l3) + "\t" + "---> " + "Área = " + resultado.getText() + " u2");
                }
            }

            if (teq.isSelected()) {
                if ("Perímetro".equals((String) combo1.getSelectedItem())) {
                    double l;
                    milista.add("Triángulo Equilátero");
                    l = Double.parseDouble(areaTexto1.getText());
                    Triangulo t = new Triangulo(l);
                    resultado.setText(String.valueOf(t.perimetro()));
                    milista.add("Lado = " + String.valueOf(l) + "\t" + "---> " + "Perímetro = " + resultado.getText() + " u");
                } else {
                    double l1;
                    double l2;
                    milista.add("Triángulo");
                    l1 = Double.parseDouble(areaTexto1.getText());
                    l2 = Double.parseDouble(areaTexto2.getText());
                    Triangulo t = new Triangulo(l1, l2);
                    resultado.setText(String.valueOf(t.area()));
                    milista.add("Base = " + String.valueOf(l1) + "\t" + "Altura" + String.valueOf(l2) + "---> " + "Área = " + resultado.getText() + " u2");
                }
            }

            if (ti.isSelected()) {
                double l1;
                double l2;
                milista.add("Triángulo Isósceles");
                l1 = Double.parseDouble(areaTexto1.getText());
                l2 = Double.parseDouble(areaTexto2.getText());
                Triangulo t = new Triangulo(l1, l2);
                resultado.setText(String.valueOf(t.perimetro()));
                milista.add("Base = " + String.valueOf(l1) + "\t" + "Lado = " + String.valueOf(l2) + "\t" + "---> " + "Perímetro = " + resultado.getText() + " u");
            }

            if (tes.isSelected()) {
                double l1;
                double l2;
                double l3;
                milista.add("Triángulo Escaleno");
                l1 = Double.parseDouble(areaTexto1.getText());
                l2 = Double.parseDouble(areaTexto2.getText());
                l3 = Double.parseDouble(areaTexto3.getText());
                Triangulo t = new Triangulo(l1, l2, l3);
                resultado.setText(String.valueOf(t.perimetro()));
                milista.add("Lado 1 = " + String.valueOf(l1) + "\t" + "Lado 2 = " + String.valueOf(l2) + "\t" + "Lado 3 = " + String.valueOf(l3) + "\t" + "---> " + "Perímetro = " + resultado.getText() + " u");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Texto no válido");
        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        areaTexto1.setText("");
        areaTexto2.setText("");
        areaTexto3.setText("");
        resultado.setText("");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!milista.isEmpty()) {
            LecturaEscritura.anadirHistorial(milista);
            milista.clear();
        }
        Calculadora c = new Calculadora();
        c.setTitle("Calculadora");
        c.setVisible(true);
        this.setVisible(false);
        this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void combo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo1ActionPerformed
        String seleccion = (String) combo1.getSelectedItem();
        if (seleccion.equals("(Seleccionar)")) {
            LimpiarPantalla();
        }
        if (seleccion.equals("Perímetro")) {
            LimpiarPantalla();
            LimpiarLados();
            buttonGroup1.clearSelection();
            cuadrado.setVisible(true);
            cuadrado1.setVisible(true);
            circulo.setVisible(true);
            circulo1.setVisible(true);
            rectangulo.setVisible(true);
            rectangulo1.setVisible(true);
            trapecio.setVisible(true);
            trapecio1.setVisible(true);
            teq.setVisible(true);
            teq1.setVisible(true);
            tes.setVisible(true);
            tes1.setVisible(true);
            ti.setVisible(true);
            ti1.setVisible(true);
        }
        if (seleccion.equals("Área")) {
            LimpiarPantalla();
            LimpiarLados();
            buttonGroup1.clearSelection();
            teq1.setText("Tríangulo");
            cuadrado.setVisible(true);
            cuadrado1.setVisible(true);
            circulo.setVisible(true);
            circulo1.setVisible(true);
            rectangulo.setVisible(true);
            rectangulo1.setVisible(true);
            trapecio.setVisible(true);
            trapecio1.setVisible(true);
            teq.setVisible(true);
            teq1.setVisible(true);
        }

    }//GEN-LAST:event_combo1ActionPerformed

    private void LimpiarPantalla() {
        cuadrado.setVisible(false);
        cuadrado1.setVisible(false);
        circulo.setVisible(false);
        circulo1.setVisible(false);
        rectangulo.setVisible(false);
        rectangulo1.setVisible(false);
        trapecio.setVisible(false);
        trapecio1.setVisible(false);
        teq.setVisible(false);
        teq1.setVisible(false);
        tes.setVisible(false);
        tes1.setVisible(false);
        ti.setVisible(false);
        ti1.setVisible(false);
    }

    public void LimpiarLados() {
        lado1.setVisible(false);
        areaTexto1.setVisible(false);
        lado2.setVisible(false);
        areaTexto2.setVisible(false);
        lado3.setVisible(false);
        areaTexto3.setVisible(false);
    }

    private void historialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historialActionPerformed
        LecturaEscritura.anadirHistorial(milista);
        LecturaEscritura.EscribirHistorial();
        LecturaEscritura.abrirHistorial();
        milista.clear();
        milista.add("OPCIÓN------------> Cálculo de Área y Perímetro");
    }//GEN-LAST:event_historialActionPerformed

    private void circuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circuloActionPerformed
        LimpiarLados();
        lado1.setText("Ingrese el radio:");
        lado1.setVisible(true);
        areaTexto1.setVisible(true);
    }//GEN-LAST:event_circuloActionPerformed

    private void tesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tesActionPerformed
        LimpiarLados();
        lado1.setText("Ingrese el lado 1:");
        lado1.setVisible(true);
        areaTexto1.setVisible(true);
        lado2.setText("Ingrese el lado 2:");
        lado2.setVisible(true);
        areaTexto2.setVisible(true);
        lado3.setText("Ingrese el lado 3:");
        lado3.setVisible(true);
        areaTexto3.setVisible(true);
    }//GEN-LAST:event_tesActionPerformed

    private void cuadradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuadradoActionPerformed
        LimpiarLados();
        lado1.setText("Ingrese el lado:");
        lado1.setVisible(true);
        areaTexto1.setVisible(true);
    }//GEN-LAST:event_cuadradoActionPerformed

    private void trapecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trapecioActionPerformed
        LimpiarLados();
        lado1.setText("Base menor:");
        lado1.setVisible(true);
        areaTexto1.setVisible(true);
        lado2.setText("Base mayor:");
        lado2.setVisible(true);
        areaTexto2.setVisible(true);
        lado3.setText("Ingrese el lado:");
        lado3.setVisible(true);
        areaTexto3.setVisible(true);
        if ("Área".equals((String) combo1.getSelectedItem())) {
            lado3.setText("Ingrese la altura:");
        }
    }//GEN-LAST:event_trapecioActionPerformed

    private void VolumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolumenActionPerformed
        if (!milista.isEmpty()) {
            LecturaEscritura.anadirHistorial(milista);
            milista.clear();
        }
        calcVolFrame cv = new calcVolFrame();
        cv.setTitle("Perímetro, Área y Volumen");
        cv.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_VolumenActionPerformed

    private void rectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rectanguloActionPerformed
        LimpiarLados();
        lado1.setText("Ingrese el lado largo:");
        lado1.setVisible(true);
        areaTexto1.setVisible(true);
        lado2.setText("Ingrese el lado corto:");
        lado2.setVisible(true);
        areaTexto2.setVisible(true);
        if ("Área".equals((String) combo1.getSelectedItem())) {
            lado1.setText("Ingrese la base:");
            lado2.setText("Ingrese la altura:");
        }
    }//GEN-LAST:event_rectanguloActionPerformed

    private void teqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teqActionPerformed
        LimpiarLados();
        lado1.setText("Ingrese un lado:");
        lado1.setVisible(true);
        areaTexto1.setVisible(true);
        if ("Área".equals((String) combo1.getSelectedItem())) {
            lado1.setText("Ingrese la base:");
            lado2.setText("Ingrese la altura:");
            lado2.setVisible(true);
            areaTexto2.setVisible(true);
        }
    }//GEN-LAST:event_teqActionPerformed

    private void tiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiActionPerformed
        LimpiarLados();
        lado1.setText("Ingrese la base:");
        lado1.setVisible(true);
        areaTexto1.setVisible(true);
        lado2.setText("Ingrese un lado:");
        lado2.setVisible(true);
        areaTexto2.setVisible(true);
    }//GEN-LAST:event_tiActionPerformed

    private void resultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calcAreaVolFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calcAreaVolFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calcAreaVolFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calcAreaVolFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new RunnableImpl());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Volumen;
    private javax.swing.JTextField areaTexto1;
    private javax.swing.JTextField areaTexto2;
    private javax.swing.JTextField areaTexto3;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton circulo;
    private javax.swing.JLabel circulo1;
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JRadioButton cuadrado;
    private javax.swing.JLabel cuadrado1;
    private javax.swing.JButton historial;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lado1;
    private javax.swing.JLabel lado2;
    private javax.swing.JLabel lado3;
    private javax.swing.JRadioButton rectangulo;
    private javax.swing.JLabel rectangulo1;
    private javax.swing.JTextField resultado;
    private javax.swing.JRadioButton teq;
    private javax.swing.JLabel teq1;
    private javax.swing.JRadioButton tes;
    private javax.swing.JLabel tes1;
    private javax.swing.JRadioButton ti;
    private javax.swing.JLabel ti1;
    private javax.swing.JRadioButton trapecio;
    private javax.swing.JLabel trapecio1;
    // End of variables declaration//GEN-END:variables

    private static class RunnableImpl implements Runnable {

        public RunnableImpl() {
        }

        public void run() {
            new calcAreaVolFrame().setVisible(true);
        }
    }
}
